@model AnnualReports.Domain.Core.AnnualReportsDbModels.MonthlyImportFundExceptionRule

@{
    ViewBag.Title = "Create Import Fund Exception Rule";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)


        <div class="form-group">
            @Html.LabelFor(model => model.OriginalFundId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.OriginalFundId, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OriginalFundId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NewFundId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.NewFundId, new { @class = "form-control", })
                @Html.ValidationMessageFor(model => model.NewFundId)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                @Html.ActionLink("Cancel", "JournalVoucherReport", null, new { @class = "btn btn-default" })
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to index", "journal-voucher", "Reports")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
