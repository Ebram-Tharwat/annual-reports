@{
    ViewBag.Title = "AnnualReport";
}

<h2>Annual Report</h2>

<div data-ng-app="app" data-ng-controller="AnnualReportCtrl as vm">
    <div block-ui="main" class="block-ui-main row" ng-cloak>
        <div class="col-md-6 col-xs-12">
            <div class="panel panel-default">
                <div class="panel-heading bold">Display report data:</div>
                <div class="panel-body">
                    <form id="form" name="form" novalidate="">
                        <div class="form-group" ng-class="{ 'has-error': form.year.$dirty && form.year.$invalid }">
                            <label class="control-label">Please select a year</label>
                            <span class="required">*</span>
                            <div class='input-group'>
                                <input type="text" name="year" data-ng-model="vm.year" class="form-control" readonly=""
                                       data-datetimepicker data-options="vm.yearPickerOptions"
                                       on-change="vm.getFunds()" required="" />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>

                        <div class="form-group" ng-class="{ 'has-error': form.funds.$dirty && form.funds.$invalid}">
                            <label class="control-label">Please select a fund</label>
                            <span class="required">*</span>
                            <ui-select ng-model="vm.selectedFund" name="funds" data-ng-required="vm.year" data-ng-disabled="!vm.year">
                                <ui-select-match placeholder="Select a fund">
                                    <span ng-bind="$select.selected.displayName + ' (' + $select.selected.fundNumber + ')'"></span>
                                </ui-select-match>
                                <ui-select-choices repeat="fund in (vm.funds | filter: $select.search) track by fund.id">
                                    <span ng-bind="fund.displayName + ' (' + fund.fundNumber + ')'"></span>
                                </ui-select-choices>
                            </ui-select>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Display Data" class="btn btn-success pull-right" data-ng-disabled="form.$invalid"
                                   data-ng-click="vm.getAnnualReportData()" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-xs-12">
            <div class="panel panel-default">
                <div class="panel-heading bold">Export report to excel:</div>
                <div class="panel-body">
                    <form id="exportForm" name="exportForm" novalidate="">
                        <div class="form-group" ng-class="{ 'has-error': exportForm.year.$dirty && exportForm.year.$invalid }">
                            <label class="control-label">Please select a year</label>
                            <span class="required">*</span>
                            <div class='input-group'>
                                <input type="text" name="year" data-ng-model="vm.exportModel.year" class="form-control" readonly=""
                                       data-datetimepicker data-options="vm.yearPickerOptions"
                                       required="" />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                        <div class="form-group">
                            <input type="button" value="Download Report" class="btn btn-success pull-right" data-ng-disabled="exportForm.$invalid"
                                   data-ng-click="vm.downloadAnnualReportData()" />
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-xs-12" ng-if="form.$valid && vm.reportData">
            <hr />
            <h3>Result:</h3>
            <div class="" ng-hide="vm.reportData && vm.gridOptions.data.length == 0">
                <button type="button" class="btn-success btn pull-right" data-ng-click="vm.downloadAnnualReportDataByFund()">Export To Excel</button>
                <br />
                <br />
            </div>
            <div ui-grid="vm.gridOptions" ui-grid-pinning ui-grid-expandable ui-grid-pagination class="grid clearfix">
                <div class="empty-data" ng-show="vm.reportData && vm.gridOptions.data.length == 0">No data available</div>
            </div>
        </div>
        <script type="text/ng-template" id="expandableRowTemplate.html">
            <div ui-grid="row.entity.subGridOptions" style="height:140px;">
            </div>
        </script>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/plugins")
    @Scripts.Render("~/bundles/angular")
    <script type="text/javascript">
        (function () {
            'use strict';

            angular
                .module('app', ['ae-datetimepicker', 'ui.select', 'blockUI', 'ngSanitize', 'ui.grid', 'ui.grid.expandable', 'ui.grid.selection', 'ui.grid.pinning', 'ui.grid.pagination'])
                .config(configure)
                .run(runBlock)
                .controller('AnnualReportCtrl', AnnualReportCtrl);;

            configure.$inject = ['$httpProvider', '$locationProvider', 'blockUIConfig'];
            runBlock.$inject = ['$rootScope'];
            AnnualReportCtrl.$inject = ['$http', 'blockUI', '$timeout'];

            function configure($httpProvider, $locationProvider, blockUIConfig) {
                $locationProvider.html5Mode(true);

                //blockUIConfig.autoBlock = true;
                //blockUIConfig.template = '<pre><code>Delay</code></pre>';

                blockUIConfig.autoInjectBodyBlock = false;
                //======================================
                // Routes
                //======================================
            }

            function runBlock($rootScope) {
            };

            function AnnualReportCtrl($http, blockUI, $timeout) {
                var vm = this;
                vm.exportModel = {};
                vm.year = undefined;
                vm.funds = [];
                vm.reportData = undefined;
                vm.selectedFund = undefined;
                vm.yearPickerOptions = {
                    viewMode: 'years',
                    format: 'YYYY',
                    showTodayButton: true,
                    ignoreReadonly: true,
                    useCurrent: false
                };
                vm.getFunds = getFunds;
                vm.getAnnualReportData = getAnnualReportData;
                vm.downloadAnnualReportData = downloadAnnualReportData;
                vm.downloadAnnualReportDataByFund = downloadAnnualReportDataByFund;

                vm.gridOptions = {
                    paginationPageSizes: [],
                    paginationPageSize: 20,
                    expandableRowTemplate: 'expandableRowTemplate.html',
                    expandableRowHeight: 150,
                    //subGridVariable will be available in subGrid scope
                    expandableRowScope: {
                        subGridVariable: 'subGridScopeVariable'
                    }
                }

                vm.gridOptions.columnDefs = [
                    { displayName: 'MCAG', field: 'mcag' }, { displayName: 'Fund #', field: 'fundNumber' }, { displayName: 'Fund Name', field: 'fundDisplayName', cellTooltip: true },
                    { displayName: 'BARs Account', field: 'barNumber' }, { displayName: 'BARs Name', field: 'barDisplayName', cellTooltip: true },
                    { displayName: 'Amount', field: 'amount', cellFilter: 'currency' }
                ];

                activate();

                /////////////////////////////////////

                function activate() {

                }
                function getFunds() {
                    vm.selectedFund = undefined;
                    $timeout(function () {
                        blockUI.message('Loading funds ...');
                    }, 0);
                    var selectedYear = new Date(vm.year).getFullYear();
                    $http.get('/api/funds/primary/' + selectedYear).then(function (result) {
                        vm.funds = result.data;
                    });
                }

                function getAnnualReportData() {
                    $timeout(function () {
                        blockUI.message('Loading data for fund "' + vm.selectedFund.displayName.trim() + '"');
                    }, 0);
                    var selectedYear = new Date(vm.year).getFullYear();
                    $http.get('/api/report/annualreport/' + selectedYear + '/' + vm.selectedFund.id).then(function (result) {
                        vm.reportData = result.data;
                        angular.forEach(result.data, function (item) {
                            item.subGridOptions = {
                                columnDefs: [{ displayName: "Debit", field: "debit", cellFilter: 'currency' }, { displayName: "Credit", field: "credit", cellFilter: 'currency' }
                                    , { displayName: "Act Desc", field: "accountDescription", width: '*', cellTooltip: true }
                                    , { displayName: "Act #1", field: "actnumbR_1" }, { displayName: "Act #2", field: "actnumbR_2" }
                                    , { displayName: "Act #3", field: "actnumbR_3" }, { displayName: "Act #4", field: "actnumbR_4" }
                                    , { displayName: "Act #5", field: "actnumbR_5" }],
                                data: item.rows
                            }
                        });
                        vm.gridOptions.data = result.data;
                    });
                }

                function downloadAnnualReportData() {
                    var selectedYear = new Date(vm.exportModel.year).getFullYear();
                    window.open(`/reports/annual-report/year/${selectedYear}/export/excel`, '_blank', '');
                }

                function downloadAnnualReportDataByFund() {
                    var selectedYear = new Date(vm.year).getFullYear();
                    window.open(`annual-report/year/${selectedYear}/fundId/${vm.selectedFund.id}/export/excel`, '_blank', '');
                }
            }
        })();
    </script>
}